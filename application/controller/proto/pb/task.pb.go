// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ステータス
type Status int32

const (
	Status_DOING    Status = 0
	Status_COMPLETE Status = 1
)

var Status_name = map[int32]string{
	0: "DOING",
	1: "COMPLETE",
}

var Status_value = map[string]int32{
	"DOING":    0,
	"COMPLETE": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

// タスクの共通メッセージ
type Task struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Status               Status   `protobuf:"varint,4,opt,name=Status,proto3,enum=pb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_DOING
}

// タスク取得のリクエストメッセージ
type GetTaskRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// タスク登録のリクエストメッセージ
type CreateTaskRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTaskRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// タスク更新のリクエストメッセージ
type UpdateTaskRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateTaskRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// タスク完了のリクエストメッセージ
type CompleteTaskRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteTaskRequest) Reset()         { *m = CompleteTaskRequest{} }
func (m *CompleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteTaskRequest) ProtoMessage()    {}
func (*CompleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *CompleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteTaskRequest.Unmarshal(m, b)
}
func (m *CompleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *CompleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteTaskRequest.Merge(m, src)
}
func (m *CompleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteTaskRequest.Size(m)
}
func (m *CompleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteTaskRequest proto.InternalMessageInfo

func (m *CompleteTaskRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterType((*Task)(nil), "pb.Task")
	proto.RegisterType((*GetTaskRequest)(nil), "pb.GetTaskRequest")
	proto.RegisterType((*CreateTaskRequest)(nil), "pb.CreateTaskRequest")
	proto.RegisterType((*UpdateTaskRequest)(nil), "pb.UpdateTaskRequest")
	proto.RegisterType((*CompleteTaskRequest)(nil), "pb.CompleteTaskRequest")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0x02, 0x41,
	0x14, 0xc7, 0xdd, 0xcd, 0x4c, 0x9f, 0x22, 0xfa, 0xa2, 0x5a, 0xec, 0xb2, 0x0d, 0x04, 0xd6, 0x61,
	0x04, 0x3b, 0x77, 0x08, 0x57, 0x64, 0xa1, 0x34, 0xd4, 0x0e, 0x1d, 0x77, 0xed, 0x25, 0xa2, 0x36,
	0xd3, 0xee, 0x18, 0xf4, 0x99, 0xfb, 0x12, 0x31, 0xb3, 0x8a, 0xab, 0x8b, 0x9d, 0xba, 0x0d, 0xbf,
	0x37, 0xf3, 0x7f, 0x6f, 0x7e, 0x3c, 0x00, 0x15, 0xc4, 0x73, 0x2e, 0x23, 0xa1, 0x04, 0xda, 0x32,
	0x6c, 0x5c, 0x4e, 0x85, 0x98, 0x2e, 0xa8, 0x65, 0x48, 0xb8, 0x7a, 0x6f, 0xd1, 0x52, 0xaa, 0xef,
	0xe4, 0x02, 0x93, 0x90, 0x1f, 0x07, 0xf1, 0x1c, 0xab, 0x60, 0xfb, 0x9e, 0x63, 0xb9, 0x56, 0xb3,
	0x34, 0xb4, 0x7d, 0x0f, 0x11, 0xf2, 0xfd, 0x60, 0x49, 0x8e, 0x6d, 0x88, 0x39, 0xa3, 0x0b, 0x65,
	0x8f, 0xe2, 0x49, 0x34, 0x93, 0x6a, 0x26, 0x3e, 0x9c, 0x23, 0x53, 0x4a, 0x23, 0x64, 0x50, 0x18,
	0xa9, 0x40, 0xad, 0x62, 0x27, 0xef, 0x5a, 0xcd, 0x6a, 0x1b, 0xb8, 0x0c, 0x79, 0x42, 0x86, 0xeb,
	0x0a, 0x73, 0xa1, 0xda, 0x23, 0xa5, 0x9b, 0x0e, 0xe9, 0x73, 0x45, 0xb1, 0xda, 0xef, 0xcd, 0x7c,
	0xa8, 0x77, 0x22, 0x0a, 0x14, 0xa5, 0x2f, 0x6d, 0x06, 0xb2, 0x0e, 0x0f, 0x64, 0x67, 0x06, 0x62,
	0xaf, 0x50, 0x7f, 0x91, 0x6f, 0x7b, 0x51, 0xff, 0xf2, 0x57, 0x76, 0x0d, 0xa7, 0x1d, 0xb1, 0x94,
	0x0b, 0xfa, 0x33, 0xfc, 0xf6, 0x6a, 0xa3, 0x04, 0x4b, 0x70, 0xec, 0x0d, 0xfc, 0x7e, 0xaf, 0x96,
	0xc3, 0x0a, 0x14, 0x3b, 0x83, 0xa7, 0xe7, 0xc7, 0xee, 0xb8, 0x5b, 0xb3, 0xda, 0x3f, 0x16, 0x94,
	0x75, 0xc4, 0x88, 0xa2, 0xaf, 0xd9, 0x84, 0xf0, 0x06, 0x4e, 0xd6, 0x86, 0x10, 0xb5, 0xc0, 0x5d,
	0x5d, 0x8d, 0xa2, 0x66, 0x1a, 0xb0, 0x1c, 0xb6, 0x00, 0xb6, 0xaa, 0xf0, 0x4c, 0x57, 0x32, 0xea,
	0x76, 0x1e, 0xdc, 0x03, 0x6c, 0x85, 0x24, 0x0f, 0x32, 0x82, 0x1a, 0xe7, 0x3c, 0x59, 0x19, 0xbe,
	0x59, 0x19, 0xde, 0xd5, 0x2b, 0xc3, 0x72, 0xf8, 0x00, 0x95, 0xf4, 0xa7, 0xf1, 0xc2, 0x74, 0xcc,
	0x6a, 0x38, 0x1c, 0x11, 0x16, 0x0c, 0xb9, 0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xb8, 0xe6,
	0x58, 0xa7, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	// タスク取得
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error)
	// タスク登録
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error)
	// タスク更新
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// タスク完了
	CompleteTask(ctx context.Context, in *CompleteTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/pb.TaskService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/pb.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CompleteTask(ctx context.Context, in *CompleteTaskRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.TaskService/CompleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	// タスク取得
	GetTask(context.Context, *GetTaskRequest) (*Task, error)
	// タスク登録
	CreateTask(context.Context, *CreateTaskRequest) (*Task, error)
	// タスク更新
	UpdateTask(context.Context, *UpdateTaskRequest) (*empty.Empty, error)
	// タスク完了
	CompleteTask(context.Context, *CompleteTaskRequest) (*empty.Empty, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CompleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CompleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskService/CompleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CompleteTask(ctx, req.(*CompleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "CompleteTask",
			Handler:    _TaskService_CompleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
